# WiseTale — AI-Powered Story-Based Learning for Humanities

WiseTale is an AI-driven educational platform that transforms complex topics from humanities subjects (such as History, Geography, Philosophy, and Social Studies) into emotionally engaging and easily digestible **short video fairy tales**. The project is currently focused on humanities education and is designed for students, self-learners, and educators seeking intuitive and story-rich content.

## 🚀 What It Does

WiseTale creates engaging educational videos through an intelligent AI pipeline. Here's how it works:

**User Input**: Simply enter a subject (History, Geography, Philosophy) and a topic (e.g., "French Revolution", "Ancient Egypt", "Socratic Method")

**AI Generation Pipeline**:
1. 🤖 **AI Story Generation**: GPT-4 creates an engaging narrative explaining the topic
2. 🎙️ **Text-to-Speech**: ElevenLabs converts the story into natural audio narration  
3. 📸 **Image Collection**: Automatically searches Pexels for relevant high-quality images
4. 🎬 **Video Creation**: Generates a slideshow video with:
   - Smooth transitions between images
   - Real-time subtitles synchronized with audio
   - Professional visual effects and timing
   - Optimized for educational engagement

**Output**: A complete educational video with story narration, visuals, and subtitles - ready to watch and learn!

The platform is **accessible via web interface** and is optimized for English-speaking users aged 13–25, especially those seeking more intuitive and less academic learning formats.

---

## 🧰 Tech Stack

### Frontend
- **Framework**: React / Next.js
- **Hosting**: Vercel
- **Design**: V0.dev + Tailwind CSS (UI prototyping)
- **Auth**: Clerk / Supabase Auth (optional)

### Backend
- **Framework**: FastAPI (Python)
- **AI & Media**:
  - GPT-4 (OpenAI) — story text generation
  - ElevenLabs — text-to-speech conversion
  - Pexels API — high-quality educational images
  - MoviePy — video slideshow creation with transitions
- **Database**: Supabase (PostgreSQL)
- **Cache**: Redis (for API responses and media)
- **Media Processing**: FFmpeg, Pillow for image/video handling

### Dev Tools
- **Cursor** — AI pair programming
- **Excalidraw** — system diagrams
- **CapCut / Descript** — video edits if needed
- **Docker** — containerized development
- **CI/CD**: GitHub Actions / Railway

---

## 📦 Project Structure

