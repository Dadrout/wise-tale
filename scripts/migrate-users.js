// –°–∫—Ä–∏–ø—Ç –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
// –î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª–µ providerId –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

const { initializeApp } = require('firebase/app');
const { getFirestore, doc, getDoc, updateDoc, collection, getDocs } = require('firebase/firestore');

const firebaseConfig = {
  apiKey: "AIzaSyAaYnmkiIR01-kuFYQRR7RGK8HWVs7duLg",
  authDomain: "time-capsule-d5a66.firebaseapp.com",
  projectId: "time-capsule-d5a66",
  storageBucket: "time-capsule-d5a66.firebasestorage.app",
  messagingSenderId: "218071541143",
  appId: "1:218071541143:web:c3eadd2c64274082ff50d2",
  measurementId: "G-YWMXJ6FHD3"
};

// Initialize Firebase
const app = initializeApp(firebaseConfig);
const db = getFirestore(app);

async function migrateUsers() {
  try {
    console.log('üîç –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
    
    const usersRef = collection(db, 'users');
    const snapshot = await getDocs(usersRef);
    
    let updatedCount = 0;
    let skippedCount = 0;
    
    for (const docSnap of snapshot.docs) {
      const userData = docSnap.data();
      
      // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —É –∫–æ—Ç–æ—Ä—ã—Ö —É–∂–µ –µ—Å—Ç—å providerId
      if (userData.providerId) {
        console.log(`‚è≠Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userData.email} —É–∂–µ –∏–º–µ–µ—Ç providerId: ${userData.providerId}`);
        skippedCount++;
        continue;
      }
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º providerId –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö
      let providerId = 'password'; // –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      
      // –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å displayName –∏ –æ–Ω –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç username,
      // –∏ email —Å–æ–¥–µ—Ä–∂–∏—Ç gmail, –≤–µ—Ä–æ—è—Ç–Ω–æ —ç—Ç–æ Google –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
      if (userData.displayName && 
          userData.displayName !== userData.username &&
          (userData.email.includes('@gmail.com') || userData.email.includes('@googlemail.com'))) {
        providerId = 'google.com';
      }
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      await updateDoc(doc(db, 'users', docSnap.id), {
        providerId: providerId,
        updatedAt: new Date()
      });
      
      console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userData.email} —Å providerId: ${providerId}`);
      updatedCount++;
    }
    
    console.log(`\nüìä –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞:`);
    console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${updatedCount}`);
    console.log(`‚è≠Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${skippedCount}`);
    console.log(`üìù –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${updatedCount + skippedCount}`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –º–∏–≥—Ä–∞—Ü–∏–∏:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
migrateUsers(); 