version: '3.8'

services:
  redis:
    image: redis:alpine
    container_name: wizetale-redis-prod
    restart: always
    networks:
      - wizetale-network

  celery-worker:
    build:
      context: ./wizetale-api
      dockerfile: Dockerfile
    image: wizetale-celery-worker-prod
    container_name: wizetale-celery-worker-prod
    command: celery -A app.celery_utils.celery worker --loglevel=info
    restart: always
    env_file:
      - ./wizetale-api/.env
    depends_on:
      - redis
      - backend
    networks:
      - wizetale-network

  celery-flower:
    image: mher/flower:2.0
    container_name: wizetale-flower-prod
    command: celery -A app.celery_utils.celery flower --broker=redis://redis:6379/0 --port=5555
    restart: always
    ports:
      - "5555:5555"
    depends_on:
      - redis
      - celery-worker
    networks:
      - wizetale-network

  backend:
    build:
      context: ./wizetale-api
      dockerfile: Dockerfile
    image: wizetale-backend-prod
    container_name: wizetale-backend-prod
    restart: always
    env_file:
      - ./wizetale-api/.env
    networks:
      - wizetale-network
    depends_on:
      - redis

  worker:
    build:
      context: ./wizetale-api
      dockerfile: Dockerfile
    image: wizetale-worker-prod
    container_name: wizetale-worker-prod
    restart: always
    command: ["celery", "-A", "app.celery_utils.celery_app", "worker", "--loglevel=info"]
    env_file:
      - ./wizetale-api/.env
    volumes:
      - ./wizetale-api/generated_videos:/app/generated_videos
      - ./wizetale-api/generated_images:/app/generated_images
      - ./wizetale-api/generated_audio:/app/generated_audio
    networks:
      - wizetale-network
    depends_on:
      - redis
      - backend

  frontend:
    build:
      context: ./wizetale-app
      dockerfile: Dockerfile.prod
      args:
        NEXT_PUBLIC_API_KEY: ${API_KEY}
        NEXT_PUBLIC_FIREBASE_API_KEY: ${NEXT_PUBLIC_FIREBASE_API_KEY}
        NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN}
        NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${NEXT_PUBLIC_FIREBASE_PROJECT_ID}
        NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET}
        NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID}
        NEXT_PUBLIC_FIREBASE_APP_ID: ${NEXT_PUBLIC_FIREBASE_APP_ID}
    image: wizetale-frontend-prod
    container_name: wizetale-frontend-prod
    restart: always
    environment:
      - NEXT_PUBLIC_API_URL=https://api.wizetale.com
    networks:
      - wizetale-network

  nginx:
    image: nginx:1.25-alpine
    container_name: wizetale-nginx-prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/templates/default.conf.template
      - /etc/letsencrypt:/etc/letsencrypt:ro
    environment:
      - API_KEY=${API_KEY}
      - NGINX_HOST=wizetale.com
    command: /bin/sh -c 'envsubst ''$${API_KEY},$${NGINX_HOST}'' < /etc/nginx/templates/default.conf.template > /etc/nginx/conf.d/default.conf && nginx -g "daemon off;"'
    depends_on:
      - backend
      - frontend
    networks:
      - wizetale-network

networks:
  wizetale-network:
    driver: bridge 