---
description: 
globs: 
alwaysApply: false
---
"backendRules": [
    "Use FastAPI with Pydantic models for all endpoints",
    "Use PostgreSQL via Supabase for structured data",
    "Use Redis for caching generated content based on (subject, topic, level)",
    "Use ElevenLabs for audio generation and Runway/Sora for video",
    "All API responses must include proper error handling and validation",
    "Implement async handling of third-party services",
    "Document each route with path, method, and expected input/output",
    "Create endpoints for: /generate, /user, /history, /feedback",
    "Secure endpoints with rate limiting and optional API key",
    "Use environment variables for all secrets (API keys, etc)",
    "Follow REST conventions and return status codes properly",
    "Later add: background task queue (e.g. Celery) for heavy generation",
    "Implement AI pipeline orchestration for story generation",
    "Use GPT-4 for initial story script generation",
    "Implement content moderation and fact-checking pipeline",
    "Support multiple voice styles in ElevenLabs for different characters",
    "Add fallback options for each AI service in case of failures",
    "Store media files (video/audio) in S3-compatible storage",
    "Implement CDN integration for media delivery",
    "Use efficient video compression and adaptive streaming",
    "Implement media cleanup jobs for unused generated content",
    "Support subtitle/caption file generation and storage",
    "Design schemas for: Stories, Users, Progress, Analytics",
    "Implement database migrations using Alembic",
    "Use database indexing for frequent query patterns",
    "Cache frequently accessed stories and metadata",
    "Implement query optimization for content discovery",
    "Implement JWT-based authentication",
    "Add role-based access control (student/teacher/admin)",
    "Set up CORS with proper origin validation",
    "Implement request validation middleware",
    "Add API request logging and monitoring",
    "Track user engagement metrics (views, completion rates)",
    "Monitor AI service performance and costs",
    "Implement error tracking and reporting",
    "Add performance monitoring for video delivery",
    "Create admin dashboard endpoints for metrics",
    "Design for horizontal scaling of API servers",
    "Implement queue-based processing for story generation",
    "Add circuit breakers for external AI services",
    "Optimize database queries for large datasets",
    "Implement proper connection pooling",
    "Support quiz generation and scoring",
    "Track learning progress and achievements",
    "Enable content difficulty adjustment",
    "Support teacher/classroom management features",
    "Enable content flagging and review system",
    "Version all API endpoints (e.g., /v1/)",
    "Implement GraphQL endpoint for flexible queries",
    "Add pagination for list endpoints",
    "Support partial response fields selection",
    "Implement webhook notifications for long processes",
    "Write unit tests for all business logic",
    "Add integration tests for AI pipelines",
    "Implement API contract testing",
    "Set up CI/CD pipeline with test coverage",
    "Add performance benchmarking tests",
    "Generate OpenAPI/Swagger documentation",
    "Document all environment variables",
    "Add setup instructions for local development",
    "Document AI service integration details",
    "Maintain API changelog"
  ]