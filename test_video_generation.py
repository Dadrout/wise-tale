#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–¥–µ–æ —Å AI –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
"""
import requests
import time
import json

def test_video_generation():
    """–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–¥–µ–æ —Å AI –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏"""
    
    print("üé¨ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–¥–µ–æ —Å AI –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å API
    try:
        response = requests.get("http://localhost:8000/")
        if response.status_code == 200:
            print("‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        else:
            print("‚ùå API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            return
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API: {e}")
        return
    
    # –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á—É –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    print("\nüìù –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á—É –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ...")
    task_data = {
        "subject": "history",
        "topic": "Renaissance Italy",
        "user_id": 123,
        "persona": "narrator",
        "language": "en"
    }
    
    try:
        response = requests.post(
            "http://localhost:8000/api/v1/tasks/generate",
            json=task_data,
            timeout=10
        )
        
        if response.status_code == 200:
            task_info = response.json()
            task_id = task_info["task_id"]
            print(f"‚úÖ –ó–∞–¥–∞—á–∞ —Å–æ–∑–¥–∞–Ω–∞: {task_id}")
            
            # –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
            print("\n‚è≥ –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å...")
            
            for i in range(30):  # –ú–∞–∫—Å–∏–º—É–º 5 –º–∏–Ω—É—Ç
                try:
                    status_response = requests.get(f"http://localhost:8000/api/v1/tasks/{task_id}")
                    if status_response.status_code == 200:
                        status_data = status_response.json()
                        
                        progress = status_data.get("progress", 0)
                        status = status_data.get("status", "unknown")
                        message = status_data.get("message", "")
                        
                        print(f"üìä –ü—Ä–æ–≥—Ä–µ—Å—Å: {progress}% - {message}")
                        
                        if status == "completed":
                            print("\nüéâ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
                            
                            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
                            result = status_data.get("result", {})
                            print(f"üé¨ –í–∏–¥–µ–æ: {result.get('video_url', 'N/A')}")
                            print(f"üéµ –ê—É–¥–∏–æ: {result.get('audio_url', 'N/A')}")
                            print(f"üñºÔ∏è  –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {len(result.get('images_used', []))}")
                            
                            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
                            images = result.get('images_used', [])
                            if images:
                                print("\nüñºÔ∏è  –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:")
                                for idx, img in enumerate(images, 1):
                                    print(f"   {idx}. {img}")
                            
                            return True
                            
                        elif status == "failed":
                            print(f"‚ùå –ó–∞–¥–∞—á–∞ –ø—Ä–æ–≤–∞–ª–∏–ª–∞—Å—å: {message}")
                            return False
                            
                        elif status == "running" or status == "in_progress":
                            # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –∂–¥–∞—Ç—å
                            time.sleep(10)
                        else:
                            print(f"‚ö†Ô∏è  –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {status}")
                            time.sleep(10)
                    else:
                        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: {status_response.status_code}")
                        time.sleep(10)
                        
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è: {e}")
                    time.sleep(10)
            
            print("‚è∞ –¢–∞–π–º–∞—É—Ç - –∑–∞–¥–∞—á–∞ –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å –∑–∞ 5 –º–∏–Ω—É—Ç")
            return False
            
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á–∏: {response.status_code}")
            print(f"Response: {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    success = test_video_generation()
    
    print("\n" + "=" * 50)
    if success:
        print("üéØ –¢–µ—Å—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!")
        print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –≤ wizetale-api/generated_*/")
    else:
        print("‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω")
        print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏") 